Parameters:
  VpcName:
    Description: vpc-name
    Type: String
  PublicSubName:
    Description: public-subnet-name
    Type: String
  PrivateSubName:
    Description: private-subnet-name
    Type: String 
  InstanceName:
    Description: instance-name
    Type: String
  SecGroupName:
    Description: sec-group-name
    Type: String 
Resources:
  MyVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.10.0.0/16"
      Tags:
        - Key: Name
          Value: !Ref VpcName
  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "eu-central-1a" 
      VpcId: !Ref MyVPC
      CidrBlock: "10.10.1.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Ref PublicSubName
  PrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "eu-central-1a" 
      VpcId: !Ref MyVPC
      CidrBlock: "10.10.2.0/24"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Ref PrivateSubName
  MySecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow SSH and HTTP access"
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
      Tags:
        - Key: Name
          Value: !Ref SecGroupName
  
  MyEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-0c0d3776ef525d5dd"
      InstanceType: "t2.micro"
      KeyName: "test-keypair"
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref MySecurityGroup
      Tags:
        - Key: Name
          Value: !Ref InstanceName